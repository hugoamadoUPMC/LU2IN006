
RENDU :

Le projet consiste à comparer les performances de deux structures de données, une basée sur une liste chaînée et l'autre sur une table de hachage, pour la gestion d'une bibliothèque d'ouvrages. L'objectif est d'évaluer les temps de recherche en fonction de la taille de la bibliothèque.

Structures de Données Manipulées :

Liste Chaînée : Une structure où chaque élément est lié au suivant par un pointeur. Elle est utilisée pour représenter la bibliothèque d'ouvrages.
Table de Hachage : Une structure de données qui utilise une fonction de hachage pour stocker les éléments de manière efficace. Elle est employée pour une gestion alternative de la bibliothèque.
Description Globale du Code :

Les fichiers header (.h) et de code source (.c) sont organisés en deux sections distinctes : "exo1" pour la liste chaînée et "exo2" pour la table de hachage.
Les fonctions principales incluent la création, l'affichage, la recherche, l'insertion et la suppression d'ouvrages dans la bibliothèque.
Un menu interactif permet à l'utilisateur de choisir la structure de données à utiliser et d'exécuter diverses opérations telles que l'insertion, la recherche et la suppression d'ouvrages.
Des fichiers d'entrée/sortie sont utilisés pour charger et sauvegarder les données de la bibliothèque à partir de fichiers texte.
Pour évaluer les performances, des mesures de temps sont effectuées pour les opérations de recherche en fonction de la taille de la bibliothèque, puis représentées graphiquement pour une analyse comparative.

3.1 : Pour comparer les temps de calcul entre les deux structures (liste chaînée et table de hachage) pour la recherche d'un ouvrage par son numéro, son titre et son auteur, nous devons considérer plusieurs facteurs :

Recherche par numéro :

Liste chaînée : La recherche par numéro dans une liste chaînée implique de parcourir la liste jusqu'à trouver le livre correspondant au numéro recherché. Dans le pire des cas, la complexité de cette opération 
est linéaire par rapport à la taille de la liste.
Table de hachage : En utilisant la clé (numéro) comme indice dans la table de hachage, la complexité de la recherche est généralement constante, en supposant que les collisions sont gérées efficacement.
Recherche par titre ou auteur :

Liste chaînée : La recherche par titre ou auteur dans une liste chaînée implique également de parcourir la liste et de comparer les titres ou auteurs jusqu'à trouver la correspondance. Dans le pire des cas, 
la complexité est linéaire.
Table de hachage : La recherche par titre ou auteur dans une table de hachage est similaire à la recherche par numéro. Cependant, la qualité de la fonction de hachage peut affecter les performances. 
Si les collisions sont fréquentes, la complexité de la recherche peut être linéaire dans le pire des cas.
Comparaison des performances :

Pour un grand nombre d'ouvrages, la table de hachage est généralement plus efficace pour la recherche par numéro, titre ou auteur, surtout si la fonction de hachage est bien choisie et les collisions sont minimisées.
La liste chaînée peut être plus simple à implémenter, mais elle peut devenir inefficace pour les grandes collections d'ouvrages, en particulier pour les recherches par titre ou auteur.
En termes de temps de calcul, la table de hachage offre généralement des performances meilleures, surtout pour les recherches par auteurs dans notre cas. La table de hachage permet de se rapprocher rapidement de
l'élément rechercher.
En résumé, la structure la plus appropriée dépend de plusieurs facteurs tels que la taille de la collection, la fréquence des opérations de recherche, et la qualité des données. 
Pour une recherche efficace sur de grandes collections d'ouvrages, la table de hachage est souvent préférable, mais pour des ensembles de données plus petits ou des opérations de recherche moins fréquentes, 
une liste chaînée peut être adéquate.

QST 3.2 : Plus la taille de la biblioteque est grand, plus la structure liste chainée prend du temps et des ressources, tandis que la structure avec la table de hachage est plus efficace pour les grandes tailles de biblioteques; Cela s'explique par la complexité algorithmique des opérations de recherche dans chacune des structures de données*/

QST 3.4 : L'observation met en évidence les différences de performances entre les deux structures de données en fonction de la taille de la bibliothèque.
La structure de liste chaînée, en raison de sa complexité linéaire pour les opérations de recherche, voit son temps d'exécution augmenter de manière significative avec la taille de la bibliothèque.
En revanche, la table de hachage, avec sa complexité en moyenne constante pour les opérations de recherche, reste relativement efficace même pour de grandes bibliothèques.
En résumé, vos observations confirment les attentes en matière de performances des structures de données en fonction de la taille de la bibliothèque, et elles mettent en lumière l'importance de choisir la bonne structure de données en fonction des besoins spécifiques du projet.